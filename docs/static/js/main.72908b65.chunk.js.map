{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","categorias","setcategorias","c","i","ReactDOM","render","document","getElementById"],"mappings":"2MAiCeA,EA9BY,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAe9C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,4BAAQA,GAAR,CAAcP,OAChCC,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAAAP,GAAC,OAAIF,EAAcE,EAAEQ,OAAOF,a,+BCvBzCG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,0FAE4EC,UAAUH,GAFtF,qBAGDI,MAAMF,GAHL,cAGbG,EAHa,gBAIIA,EAAIC,OAJR,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAeZM,GAfY,4CAAH,sDCaLO,EAVY,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCgBDO,EApBQ,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAkBtC,OAXAC,qBAAU,WAENxB,EAAQC,GAAUwB,MAAK,SAAAd,GACnBY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAIlB,CAACpB,IAEGqB,EDf2BI,CAAazB,GAAjCa,EAFuB,EAE7BN,KAAca,EAFe,EAEfA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAE/CoB,GAAW,2CAEf,qBAAKJ,UAAU,YAAf,SACKH,EAAOJ,KAAI,SAAAC,GACR,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEQlCe,EApBa,WAAO,IAAD,EAEIxC,mBAAS,CAAC,WAFd,mBAEzByC,EAFyB,KAEbC,EAFa,KAIhC,OACE,qCACE,8CACA,uBACA,cAAC,EAAD,CAAa3C,cAAe2C,IAC5B,6BAEID,EAAWlB,KAAI,SAACoB,EAAGC,GACjB,OAAO,cAAC,EAAD,CAAiB9B,SAAU6B,GAAbC,YCXjCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.72908b65.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setinputValue] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n\n            setCategories(cats => [...cats, inputValue]);\n            setinputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={e => setinputValue(e.target.value)}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n","export const getGifs = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=ejTd9YlbruCyODX06sm4emkHKj7uRJNZ&q=${encodeURI(category)}&limit=5`\n    const res = await fetch(url);\n    const { data } = await res.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    //console.log(gifs);\n    return gifs;\n}\n","import React from 'react'\n\n\nexport const GifGridItem = ({ title, url }) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\" >\n            <img src={url} alt={title}/>     \n            <p>{title}</p>       \n        </div>\n    )\n}\n\nexport default GifGridItem;\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {\n                loading && <p>Loading...</p>\n            }\n            <div className=\"card-grid\" >\n                {images.map(img => {\n                    return <GifGridItem key={img.id} {...img} />\n                })}\n            </div>\n        </>\n    )\n\n}\n\nexport default GifGrid;\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n        getGifs(category).then(img => {\n            setstate({\n                data: img, \n                loading: false\n            })\n        });\n\n    }, [category]);\n\n    return state;\n\n}","import React, { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\n\nexport const GifExpertApp = () => {\n  \n  const [categorias, setcategorias] = useState(['Arcane']);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <hr/>\n      <AddCategory setCategories={setcategorias} />\n      <ul>\n        {\n          categorias.map((c, i) => {\n            return <GifGrid key={i} category={c} />\n          })\n        }\n      </ul>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}